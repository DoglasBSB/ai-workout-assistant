# Assistente de Treinos com IA

Este é um aplicativo completo que atua como um "Assistente de Treinos com IA", projetado para gerar treinos personalizados com base nos objetivos, nível de experiência, equipamentos disponíveis e restrições de cada usuário. O aplicativo é composto por um frontend React e um backend Node.js com Express, utilizando PostgreSQL como banco de dados e a API da OpenAI para a inteligência artificial.

## Funcionalidades Essenciais

- **Cadastro/Login de Usuários:** Gerenciamento seguro de contas de usuário.
- **Questionário Inicial:** Coleta de informações detalhadas para personalização do treino.
- **Geração de Treino Personalizado com IA:** Utiliza a OpenAI API para criar rotinas de exercícios únicas.
- **Acompanhamento de Progresso:** Registro e visualização do desempenho do usuário ao longo do tempo.
- **Histórico de Treinos:** Acesso fácil a todos os treinos realizados.
- **Notificações/Lembretes:** Manter o usuário engajado e na rotina.

## Stack Tecnológica

- **Frontend:** React (com Vite), Tailwind CSS, Lucide React, React Router.
- **Backend:** Node.js, Express, PostgreSQL, Prisma ORM, JWT para autenticação.
- **Inteligência Artificial:** OpenAI API (GPT-4).
- **Autenticação:** JWT (JSON Web Tokens).

## Estrutura do Projeto

assistente-treinos/
├── backend/           # Código do servidor Node.js (API)
├── frontend/          # Código da aplicação React
└── README.md          # Este arquivo


## Guia de Configuração e Execução

Siga os passos abaixo para configurar e executar o projeto em seu ambiente local.

### 1. Pré-requisitos

Certifique-se de ter as seguintes ferramentas instaladas:

- Node.js (versão 18 ou superior)
- npm ou Yarn
- PostgreSQL (servidor de banco de dados)
- Git
- Uma chave de API da OpenAI

### 2. Configuração do Backend

1. **Navegue até o diretório `backend`:**
   ```bash
   cd backend

Instale as dependências:
npm install
# ou yarn install

Configure as variáveis de ambiente:
Crie um arquivo .env na raiz do diretório backend com as seguintes variáveis:

DATABASE_URL="postgresql://user:password@host:port/database?schema=public"
JWT_SECRET="sua_chave_secreta_jwt_aqui"
OPENAI_API_KEY="sua_chave_api_openai_aqui"
#GOOGLE_API_KEY="AIzaSyC2bH5bBOhux6kTechLqPyoHeofRVws9uM"
PORT=3001


Substitua user, password, host, port e database pelos dados do seu servidor PostgreSQL.
Gere uma chave secreta forte para JWT_SECRET.
Obtenha sua chave de API da OpenAI em platform.openai.com.

Execute as migrações do banco de dados:
npx prisma migrate dev --name init

Inicie o servidor backend:
npm start
# ou yarn start
O servidor estará rodando em http://localhost:3001.

Configuração do Frontend
Navegue até o diretório frontend:
cd ../frontend

Instale as dependências:
npm install
# ou yarn install

Configure as variáveis de ambiente:
Crie um arquivo .env na raiz do diretório frontend com a seguinte variável:
VITE_API_BASE_URL="http://localhost:3001/api"
Certifique-se de que a URL base da API corresponda ao endereço do seu backend.

Inicie a aplicação frontend:
npm run dev
# ou yarn dev
A aplicação estará disponível em http://localhost:5173 (ou outra porta disponível )

